{"version":3,"sources":["utils/consts.js","components/Login.js","components/Loader.js","routes.js","components/Chat.js","components/AppRouter.js","components/Navbar.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Login","auth","useContext","Context","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","user","console","log","Container","Grid","container","style","height","window","innerHeight","alignItems","justify","direction","width","background","Box","p","Button","variant","onClick","Loader","className","publicRoutes","path","Component","privateRoutes","firestore","useAuthState","useState","value","setValue","files","setFiles","base64Files","setBase64Files","chatRef","useRef","useCollectionData","collection","orderBy","message","loading","useEffect","current","scrollTop","scrollHeight","sendMessage","e","preventDefault","alert","add","uid","displayName","photoURL","text","image","createdAt","FieldValue","serverTimestamp","fileEncodeToBase64","fileList","forEach","file","baseFiles","reader","FileReader","readAsDataURL","onload","push","result","onerror","error","ref","overflowY","map","m","margin","backgroundColor","color","borderRadius","marginLeft","padding","Avatar","src","paddingTop","index","TextField","label","fullWidth","rowsMax","onChange","target","autoFocus","borderColor","type","Object","values","multiple","AppRouter","component","exact","to","Navbar","AppBar","position","Toolbar","signOut","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.1a59191f.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login'\nexport const CHAT_ROUTE = '/chat'","import React, {useContext} from 'react'\nimport {Container, Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport {Context} from \"../index\";\nimport firebase from \"firebase\";\n\nconst Login = () => {\n    const {auth} = useContext(Context)\n\n    const login = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider()\n        const {user} = await auth.signInWithPopup(provider)\n        console.log(user)\n    }\n\n    return (\n        <Container>\n            <Grid\n                container\n                style={{height: window.innerHeight - 50}}\n                alignItems={\"center\"}\n                justify={\"center\"}\n            >\n                <Grid\n                    container\n                    alignItems={\"center\"}\n                    direction={\"column\"}\n                    style={{width: 400, background: 'lightgray'}}\n                >\n                    <Box p={5}>\n                        <Button\n                            variant={\"outlined\"}\n                            onClick={login}\n                        >\n                            Login with Google\n                        </Button>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Login","import React from 'react'\nimport {Container, Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Loader = () => {\n    return (\n        <Container>\n            <Grid\n                container\n                style={{height: window.innerHeight - 50}}\n                alignItems={\"center\"}\n                justify={\"center\"}\n            >\n                <Grid\n                    container\n                    alignItems={\"center\"}\n                    direction={\"column\"}\n                >\n                    <div className=\"lds-ellipsis\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    </div>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n\nexport default Loader","import { CHAT_ROUTE, LOGIN_ROUTE } from './utils/consts'\nimport Login from './components/Login'\nimport Chat from './components/Chat'\n\nexport const publicRoutes = [\n    {\n        path: LOGIN_ROUTE,\n        Component: Login\n    }\n]\n\nexport const privateRoutes = [\n    {\n        path: CHAT_ROUTE,\n        Component: Chat\n    }\n]","import React, {useContext, useEffect, useRef, useState} from 'react'\nimport {Context} from \"../index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Avatar, Container, Grid} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\nimport Loader from \"./Loader\";\nimport firebase from \"firebase\";\n\nconst Chat = () => {\n    const {auth, firestore} = useContext(Context)\n    const [user] = useAuthState(auth)\n    const [value, setValue] = useState('')\n    const [files, setFiles] = useState([])\n    const [base64Files, setBase64Files] = useState([])\n    const chatRef = useRef(null)\n    const [message, loading] = useCollectionData(\n        firestore.collection('messages').orderBy('createdAt')\n    )\n\n    useEffect(() => {\n        if (message) chatRef.current.scrollTop = chatRef.current.scrollHeight\n    })\n\n    const sendMessage = async (e) => {\n        e.preventDefault()\n        alert(files)\n        firestore.collection('messages').add({\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n            text: value,\n            image: base64Files,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n        setValue('')\n        setFiles([])\n        setBase64Files([])\n    }\n\n    const attachFile = (e) => {\n        const fileList = files\n        fileList.push(e.target.files)\n        setFiles(fileList)\n        fileEncodeToBase64(Object.values(fileList[0]))\n    }\n\n    const fileEncodeToBase64 = (fileList) => {\n        fileList.forEach(file => {\n            const baseFiles = base64Files\n            const reader = new FileReader()\n            reader.readAsDataURL(file)\n            reader.onload = () => {\n                baseFiles.push(reader.result)\n                setBase64Files(baseFiles)\n            }\n            reader.onerror = (e) => {\n                console.error(e)\n            }\n        })\n    }\n\n    if (loading) {\n        return <Loader/>\n    }\n\n    return (\n            <Grid\n                container\n                justify={\"center\"}\n                style={{height: window.innerHeight - 50}}\n            >\n                <div ref={chatRef} style={{width: '100%', height: '70vh', overflowY: 'auto'}}>\n                    {\n                        message.map(m => (\n                            <div style={{\n                                margin: 10,\n                                backgroundColor: user.uid === m.uid ? '#2B5279' : '#182633',\n                                color: '#fff',\n                                borderRadius: 5,\n                                marginLeft: user.uid === m.uid ? 'auto' : '10px',\n                                width: 'fit-content',\n                                padding: 10\n                            }}\n                                key={m.text}\n                            >\n                                <Grid \n                                    container \n                                    alignItems={'center'}\n                                >\n                                    <Avatar src={m.photoURL}/>\n                                    <div>{m.displayName}</div>\n                                </Grid>\n                                <div\n                                    style={{paddingTop: 10}}\n                                >\n                                    {m.text}\n                                </div>\n                                <div>\n                                    {\n                                        m.image.map((e, index) => (\n                                            <img key={index} style={{width: '200px', margin: '5px'}} src={e} />\n                                        ))\n                                    }\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n                <Grid\n                    container\n                    direction={\"column\"}\n                    alignItems={\"flex-end\"}\n                    style={{width: '100%', backgroundColor: '#17212B'}}\n                >\n                    <form style={{width: '100%'}} >\n                        <TextField\n                            variant={\"outlined\"}\n                            label={'Enter message'}\n                            fullWidth\n                            rowsMax={2}\n                            value={value}\n                            onChange={(e) => setValue(e.target.value)}\n                            autoFocus\n                            style={{color: '#fff', borderColor: '#fff'}}\n                        />\n                        <Button \n                            type={\"submit\"}\n                            color=\"default\"\n                            onClick={sendMessage}\n                            variant={\"outlined\"}\n                        >\n                            Send\n                        </Button>\n                        <label className=\"attach-file\">\n                            File\n                            <input \n                                type=\"file\"\n                                onChange={attachFile}\n                                multiple\n                            />\n                        </label>\n                    </form>\n                </Grid>\n            </Grid>\n    )\n}\n\nexport default Chat\n","import React, {useContext} from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { CHAT_ROUTE, LOGIN_ROUTE } from '../utils/consts'\nimport { privateRoutes, publicRoutes } from '../routes'\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Context} from \"../index\";\n\nconst AppRouter = () => {\n    const {auth} = useContext(Context)\n    const [user] = useAuthState(auth)\n\n    return user ? \n        (\n            <Switch>\n                {privateRoutes.map(({path, Component}) => \n                    <Route key={path} path={path} component={Component} exact={true}/>\n                )}\n                <Redirect to={CHAT_ROUTE}/>\n            </Switch>\n        )\n        :\n        (\n            <Switch>\n                {publicRoutes.map(({path, Component}) => \n                    <Route key={path} path={path} component={Component} exact={true}/>\n                )}\n                <Redirect to={LOGIN_ROUTE}/>\n            </Switch>\n        )\n}\n\nexport default AppRouter","import React, {useContext} from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport {Button, Grid} from '@material-ui/core'\nimport {NavLink} from 'react-router-dom'\nimport {LOGIN_ROUTE} from '../utils/consts'\nimport {Context} from \"../index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\n\n\nconst Navbar = () => {\n    const {auth} = useContext(Context)\n    const [user] = useAuthState(auth)\n\n    return (\n        <AppBar color='transparent' position=\"static\">\n            <Toolbar variant={\"dense\"}>\n                <Grid container justify={\"flex-end\"}>\n                    {user ?\n                        <Button style={{color: '#fff'}} onClick={() => auth.signOut()}>LogOut</Button>\n                        :\n                        <NavLink to={LOGIN_ROUTE}>\n                            <Button style={{color: '#fff'}}>LogIn</Button>\n                        </NavLink>\n                    }\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar","import {BrowserRouter, HashRouter} from 'react-router-dom'\nimport AppRouter from './components/AppRouter'\nimport Navbar from './components/Navbar'\nimport React, {useContext} from \"react\";\nimport {Context} from \"./index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport Loader from \"./components/Loader\";\n\nfunction App() {\n    const {auth} = useContext(Context)\n    const [user, loading, error] = useAuthState(auth)\n\n    if (loading) {\n        return <Loader />\n    }\n\n  return (\n    <HashRouter>\n      <Navbar/>\n      <AppRouter/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from \"firebase\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCuuAXbn99vaBBx-73wGOOB-Zg6phCZQrU\",\n    authDomain: \"chat-fbsrct.firebaseapp.com\",\n    projectId: \"chat-fbsrct\",\n    storageBucket: \"chat-fbsrct.appspot.com\",\n    messagingSenderId: \"545532414519\",\n    appId: \"1:545532414519:web:332853a505f970323e4db2\",\n    measurementId: \"G-RJPS65PC9R\"\n})\n\nexport const Context = createContext(null)\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nReactDOM.render(\n  <React.StrictMode>\n      <Context.Provider value={{\n          firebase,\n          auth,\n          firestore\n      }}>\n          <App />\n      </Context.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}